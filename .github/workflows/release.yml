name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]


jobs:

  build:
    strategy:
      matrix:
        # Include arm7
        goos: [linux]
        goarch: [amd64]
        include:
          - goos: linux
            goarch: arm
            goarm: 7
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Get project dependencies
        run: go mod download
      - name: Get release version
        if: ${{ github.event_name == 'release' }}
        run: |
          echo "version=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: Build essh
        run: |
          echo "version: $version"
          mkdir -p build_assets
          go build -v -o build_assets/essh -tags "essh" -trimpath


      - name: Create ZIP archive
        shell: bash
        run: |
          pushd build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../essh-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./essh-$ASSET_NAME.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha1","sha256","sha512"}
          do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done
      - name: Change the name
        run: |
          mv build_assets essh-$ASSET_NAME
      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: essh-${{ steps.get_filename.outputs.ASSET_NAME }}
          path: |
            ./essh-${{ steps.get_filename.outputs.ASSET_NAME }}/*
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./essh-${{ steps.get_filename.outputs.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
          file_glob: true
